{"version":3,"sources":["reportWebVitals.js","app/utils/validator.js","app/components/common/form/textField.jsx","app/components/common/form/selectField.jsx","app/components/common/form/radioField.jsx","app/components/common/form/multiSelectField.jsx","app/components/common/backButton.jsx","app/services/localStorage.service.js","app/services/auth.service.js","app/services/http.service.js","app/services/quality.service.js","app/utils/isOutdated.js","app/store/qualities.js","app/services/profession.service.js","app/store/professions.js","app/services/user.service.js","app/utils/getRandomInt.js","app/utils/history.js","app/utils/generateAuthError.js","app/store/users.js","app/components/page/editUserPage/editUserPage.jsx","app/components/page/editUserPage/index.js","app/components/ui/userCard.jsx","app/components/ui/qualities/quality.jsx","app/components/ui/qualities/index.js","app/components/ui/qualities/qualitiesList.jsx","app/components/ui/qualitiesCard.jsx","app/components/ui/meetingsCard.jsx","app/utils/displayDate.js","app/components/common/comments/comment.jsx","app/components/common/comments/commentsList.jsx","app/components/common/form/textAreaField.jsx","app/components/common/comments/addCommentForm.jsx","app/components/common/comments/index.js","app/services/comment.service.js","app/store/comments.js","app/components/ui/comments.jsx","app/components/page/userPage/index.js","app/components/page/userPage/userPage.jsx","app/components/common/pagination.jsx","app/components/common/groupList.jsx","app/components/ui/searchStatus.jsx","app/components/common/bookmark.jsx","app/components/common/table/tableBody.jsx","app/components/common/table/tableHeader.jsx","app/components/common/table/index.js","app/components/common/table/table.jsx","app/components/ui/profession.jsx","app/components/ui/usersTable.jsx","app/components/page/usersListPage/index.js","app/components/page/usersListPage/usersListPage.jsx","app/utils/paginate.js","app/components/ui/hoc/usersLoader.jsx","app/layouts/users.jsx","app/components/common/form/checkBoxField.jsx","app/components/ui/loginForm.jsx","app/components/ui/registerForm.jsx","app/layouts/login.jsx","app/utils/mockData.js","app/layouts/main.jsx","app/components/ui/navProfile.jsx","app/components/ui/navBar.jsx","app/components/common/protectedRoute.jsx","app/layouts/logOut.jsx","app/components/ui/hoc/appLoader.jsx","app/app.jsx","app/store/createStore.js","index.jsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","validator","data","config","errors","validate","validateMethod","statusValidate","trim","test","length","value","message","fieldName","error","TextField","label","type","name","onChange","useState","showPassword","setShowPassword","className","htmlFor","id","target","onClick","prevState","defaultProps","SelectField","defaultOption","options","optionsArray","Array","isArray","Object","keys","map","optionName","_id","disabled","option","RadioField","handleChange","checked","MultiSelectField","defaultValue","isMulti","closeMenuOnSelect","classNamePrefix","BackHistoryButton","history","useHistory","goBack","TOKEN_KEY","REFRESH_KEY","EXPIRES_KEY","USERID_KEY","localStorageService","setTokens","refreshToken","idToken","localId","expiresIn","expiresDate","Date","getTime","localStorage","setItem","getAccessToken","getItem","getRefreshToken","getTokenExpiresDate","getUserId","removeAuthData","removeItem","httpAuth","axios","create","baseURL","params","key","process","REACT_APP_FIREBASE_KEY","authService","register","a","email","password","post","returnSecureToken","login","refresh","grant_type","refresh_token","http","configFile","apiEndpoint","interceptors","request","use","isFireBase","containSlash","url","slice","now","id_token","expires_id","user_id","accessToken","auth","Promise","reject","response","res","content","status","console","log","toast","httpService","get","put","delete","patch","qualityService","fetchAll","isOutdated","date","qualitiesSlice","createSlice","initialState","entities","isLoading","lastFetch","reducers","qualitiesRequested","state","qualitiesReceived","action","payload","qualitiesRequestFailed","qualitiesReducer","reducer","actions","loadQualitiesList","dispatch","getState","qualities","professionService","professionsSlice","professionsRequested","professionsReceived","professionsRequestFailed","professionsReducer","userEndpoint","userService","getCurrentUser","update","getRandomInt","min","max","Math","floor","random","createBrowserHistory","generateAuthError","userId","isLoggedIn","dataLoaded","usersSlice","usersRequested","usersReceived","usersRequestFailed","authRequestSuccess","authRequestFailed","userCreated","push","userLoggedOut","userUpdateSuccessed","findIndex","u","authRequested","usersReducer","createAction","userCreateRequested","createUserFailed","userUpdateRequested","userUpdateFailed","createUser","loadUsersList","getUserById","users","find","EditUserPage","setIsLoading","setData","currentUser","useSelector","useDispatch","qualitiesLoading","qualitiesList","q","professions","professionLoading","professionsList","p","setErrors","transformData","qualitiesIds","qualitiesArray","qualId","quality","getQualitiesListByIds","qual","useEffect","validatorConfig","isRequired","isEmail","isValid","onSubmit","e","preventDefault","profession","sex","UserCard","user","currentUserId","location","pathname","src","image","width","role","rate","Quality","color","Qualities","QualitiesCard","MeetingsCard","displayDate","parseInt","dateNow","getFullYear","getDate","getHours","minutesDif","getMinutes","toLocaleString","month","getMonth","Comment","created","created_at","onRemove","alt","height","CommentsList","comments","comment","TextAreaField","AddCommentForm","commentEndpoint","commentService","createComment","getComments","pageId","orderBy","equalTo","removeComment","commentId","commentsSlice","commentsRequested","commentsReceived","commentsRequestFailed","commentCreated","commentRemove","filter","c","commentsReducer","createCommentRequested","createCommentFailed","removeCommentRequesred","removeCommentFailed","Comments","useParams","loadCommentsList","sortedComments","nanoid","UserPage","completedMeetings","Pagination","itemsCount","pageSize","onPageChange","currentPage","pagesCount","ceil","pages","_","range","page","GroupList","items","valueProperty","contentProperty","onItemSelect","selectedItem","item","SearchStatus","number","lastOne","Number","toString","indexOf","renderPhrase","BookMark","rest","TableBody","columns","renderContent","column","component","path","TableHeader","onSort","selectedSort","rendeSortArrow","currentPath","order","undefined","scope","Table","children","Profession","prof","getProfessionById","UserTable","onToggleBookMark","to","bookmark","UsersListPage","professionsLoading","setCurrentPage","searchQuery","setSearchQuery","selectedProf","setSelectedProf","sortBy","setSortBy","filteredUsers","toLowerCase","JSON","stringify","count","usersCrop","pageNumber","startIndex","take","paginate","placeholder","onDelete","newArray","pageIndex","UsersLoader","dataStatus","propTypes","PropTypes","oneOfType","arrayOf","node","Users","edit","CheckBoxField","LoginForm","stayOn","loginError","redirect","from","code","errorMessage","RegisterForm","licence","isCapitalSymbol","isContainDigit","newData","substring","signUp","Login","formType","setFormType","toggleFormType","useMockData","statusConsts","setError","setStatus","progress","setProgress","setCount","summaryCount","incrementCount","newProgress","updateProgress","initialize","Main","NavProfile","isOpen","setOpen","NavBar","ProtectedRoute","Component","render","props","LogOut","AppLoader","usersStatusLoading","App","exact","rootReducer","combineReducers","store","configureStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5b63cf17.chunk.js","sourcesContent":["const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry)\r\n      getFID(onPerfEntry)\r\n      getFCP(onPerfEntry)\r\n      getLCP(onPerfEntry)\r\n      getTTFB(onPerfEntry)\r\n    })\r\n  }\r\n}\r\n\r\nexport default reportWebVitals\r\n","export function validator(data, config) {\r\n  const errors = {}\r\n  function validate(validateMethod, data, config) {\r\n    let statusValidate\r\n    switch (validateMethod) {\r\n      case 'isRequired': {\r\n        if (typeof data === 'boolean') statusValidate = !data\r\n        else statusValidate = data.trim() === ''\r\n\r\n        break\r\n      }\r\n      case 'isEmail': {\r\n        const emailRegExp = /^\\S+@\\S+\\.\\S+$/g\r\n        statusValidate = !emailRegExp.test(data)\r\n        break\r\n      }\r\n      case 'isCapitalSymbol': {\r\n        const capitalRegExp = /[A-Z]+/g\r\n        statusValidate = !capitalRegExp.test(data)\r\n        break\r\n      }\r\n      case 'isContainDigit': {\r\n        const digitRegExp = /\\d+/g\r\n        statusValidate = !digitRegExp.test(data)\r\n        break\r\n      }\r\n      case 'min': {\r\n        statusValidate = data.length < config.value\r\n        break\r\n      }\r\n      default:\r\n        break\r\n    }\r\n    if (statusValidate) return config.message\r\n  }\r\n  for (const fieldName in data) {\r\n    for (const validateMethod in config[fieldName]) {\r\n      const error = validate(\r\n        validateMethod,\r\n        data[fieldName],\r\n        config[fieldName][validateMethod]\r\n      )\r\n      if (error && !errors[fieldName]) errors[fieldName] = error\r\n    }\r\n  }\r\n  return errors\r\n}\r\n","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst TextField = ({ label, type, name, value, onChange, error }) => {\r\n  const [showPassword, setShowPassword] = useState(false)\r\n\r\n  const handleChange = ({ target }) => {\r\n    onChange({ name: target.name, value: target.value })\r\n  }\r\n  const getInputClasses = () => {\r\n    return 'form-control' + (error ? ' is-invalid' : '')\r\n  }\r\n  const toggleShowPassword = () => {\r\n    setShowPassword((prevState) => !prevState)\r\n  }\r\n  return (\r\n    <div className=\"mb-4\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <div className=\"input-group has-validation\">\r\n        <input\r\n          type={showPassword ? 'text' : type}\r\n          id={name}\r\n          name={name}\r\n          value={value}\r\n          onChange={handleChange}\r\n          className={getInputClasses()}\r\n        />\r\n        {type === 'password' && (\r\n          <button\r\n            className=\"btn btn-outline-secondary\"\r\n            type=\"button\"\r\n            onClick={toggleShowPassword}\r\n          >\r\n            <i className={'bi bi-eye' + (showPassword ? '-slash' : '')}></i>\r\n          </button>\r\n        )}\r\n        {error && <div className=\"invalid-feedback\">{error}</div>}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nTextField.defaultProps = {\r\n  type: 'text'\r\n}\r\nTextField.propTypes = {\r\n  label: PropTypes.string,\r\n  type: PropTypes.string,\r\n  name: PropTypes.string,\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  error: PropTypes.string\r\n}\r\n\r\nexport default TextField\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst SelectField = ({\r\n  label,\r\n  value,\r\n  onChange,\r\n  defaultOption,\r\n  options,\r\n  error,\r\n  name\r\n}) => {\r\n  const handleChange = ({ target }) => {\r\n    onChange({ name: target.name, value: target.value })\r\n  }\r\n  const getInputClasses = () => {\r\n    return 'form-select' + (error ? ' is-invalid' : '')\r\n  }\r\n\r\n  const optionsArray =\r\n    !Array.isArray(options) && typeof options === 'object'\r\n      ? Object.keys(options).map((optionName) => ({\r\n          name: options[optionName].name,\r\n          value: options[optionName]._id\r\n        }))\r\n      : options\r\n\r\n  return (\r\n    <div className=\"mb-4\">\r\n      <label htmlFor={name} className=\"form-label\">\r\n        {label}\r\n      </label>\r\n      <select\r\n        className={getInputClasses()}\r\n        id={name}\r\n        name={name}\r\n        value={value}\r\n        onChange={handleChange}\r\n      >\r\n        <option disabled value=\"\">\r\n          {defaultOption}\r\n        </option>\r\n        {optionsArray &&\r\n          optionsArray.map((option) => (\r\n            <option value={option.value} key={option.value}>\r\n              {option.label}\r\n            </option>\r\n          ))}\r\n      </select>\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  )\r\n}\r\n\r\nSelectField.propTypes = {\r\n  defaultOption: PropTypes.string,\r\n  label: PropTypes.string,\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  error: PropTypes.string,\r\n  options: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n  name: PropTypes.string\r\n}\r\n\r\nexport default SelectField\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst RadioField = ({ options, name, onChange, value, label }) => {\r\n  const handleChange = ({ target }) => {\r\n    onChange({ name: target.name, value: target.value })\r\n  }\r\n  return (\r\n    <div className=\"mb-4\">\r\n      <label className=\"form-label\">{label}</label>\r\n      <div>\r\n        {options.map((option) => (\r\n          <div\r\n            key={option.name + '_' + option.value}\r\n            className=\"form-check form-check-inline\"\r\n          >\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"radio\"\r\n              name={name}\r\n              id={option.name + '_' + option.value}\r\n              checked={option.value === value}\r\n              value={option.value}\r\n              onChange={handleChange}\r\n            />\r\n            <label\r\n              className=\"form-check-label\"\r\n              htmlFor={option.name + '_' + option.value}\r\n            >\r\n              {option.name}\r\n            </label>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nRadioField.propTypes = {\r\n  options: PropTypes.array,\r\n  name: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  value: PropTypes.string,\r\n  label: PropTypes.string\r\n}\r\n\r\nexport default RadioField\r\n","import React from 'react'\r\nimport Select from 'react-select'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst MultiSelectField = ({ options, onChange, name, label, defaultValue }) => {\r\n  const optionsArray =\r\n    !Array.isArray(options) && typeof options === 'object'\r\n      ? Object.keys(options).map((optionName) => ({\r\n          label: options[optionName].name,\r\n          value: options[optionName]._id\r\n        }))\r\n      : options\r\n  const handleChange = (value) => {\r\n    onChange({ name: name, value })\r\n  }\r\n  return (\r\n    <div className=\"mb-4\">\r\n      <label className=\"form-label\">{label}</label>\r\n      <Select\r\n        isMulti\r\n        closeMenuOnSelect={false}\r\n        defaultValue={defaultValue}\r\n        options={optionsArray}\r\n        className=\"basic-multi-select\"\r\n        classNamePrefix=\"select\"\r\n        onChange={handleChange}\r\n        name={name}\r\n      />\r\n    </div>\r\n  )\r\n}\r\nMultiSelectField.propTypes = {\r\n  options: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n  onChange: PropTypes.func,\r\n  name: PropTypes.string,\r\n  label: PropTypes.string,\r\n  defaultValue: PropTypes.array\r\n}\r\n\r\nexport default MultiSelectField\r\n","import React from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nconst BackHistoryButton = () => {\r\n  const history = useHistory()\r\n  return (\r\n    <button className=\"btn btn-primary\" onClick={() => history.goBack()}>\r\n      <i className=\"bi bi-caret-left\"></i>\r\n      Назад\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default BackHistoryButton\r\n","const TOKEN_KEY = 'jwt-token'\r\nconst REFRESH_KEY = 'jwt-refresh-token'\r\nconst EXPIRES_KEY = 'jwt-expires'\r\nconst USERID_KEY = 'user-local-id'\r\n\r\nexport function setTokens({\r\n  refreshToken,\r\n  idToken,\r\n  localId,\r\n  expiresIn = 3600\r\n}) {\r\n  const expiresDate = new Date().getTime() + expiresIn * 1000\r\n  localStorage.setItem(USERID_KEY, localId)\r\n  localStorage.setItem(TOKEN_KEY, idToken)\r\n  localStorage.setItem(REFRESH_KEY, refreshToken)\r\n  localStorage.setItem(EXPIRES_KEY, expiresDate)\r\n}\r\nexport function getAccessToken() {\r\n  return localStorage.getItem(TOKEN_KEY)\r\n}\r\nexport function getRefreshToken() {\r\n  return localStorage.getItem(REFRESH_KEY)\r\n}\r\nexport function removeAuthData() {\r\n  localStorage.removeItem(USERID_KEY)\r\n  localStorage.removeItem(TOKEN_KEY)\r\n  localStorage.removeItem(REFRESH_KEY)\r\n  localStorage.removeItem(EXPIRES_KEY)\r\n}\r\n\r\nexport function getTokenExpiresDate() {\r\n  return localStorage.getItem(EXPIRES_KEY)\r\n}\r\nexport function getUserId() {\r\n  return localStorage.getItem(USERID_KEY)\r\n}\r\n\r\nconst localStorageService = {\r\n  setTokens,\r\n  getAccessToken,\r\n  getRefreshToken,\r\n  getTokenExpiresDate,\r\n  getUserId,\r\n  removeAuthData\r\n}\r\nexport default localStorageService\r\n","import axios from 'axios'\r\nimport localStorageService from './localStorage.service'\r\n\r\nconst httpAuth = axios.create({\r\n  baseURL: 'https://identitytoolkit.googleapis.com/v1/',\r\n  params: {\r\n    key: process.env.REACT_APP_FIREBASE_KEY\r\n  }\r\n})\r\n\r\nconst authService = {\r\n  register: async ({ email, password }) => {\r\n    const { data } = await httpAuth.post(`accounts:signUp`, {\r\n      email,\r\n      password,\r\n      returnSecureToken: true\r\n    })\r\n    return data\r\n  },\r\n  login: async ({ email, password }) => {\r\n    const { data } = await httpAuth.post(`accounts:signInWithPassword`, {\r\n      email,\r\n      password,\r\n      returnSecureToken: true\r\n    })\r\n    return data\r\n  },\r\n  refresh: async () => {\r\n    const { data } = await httpAuth.post('token', {\r\n      grant_type: 'refresh_token',\r\n      refresh_token: localStorageService.getRefreshToken()\r\n    })\r\n    return data\r\n  }\r\n}\r\n\r\nexport default authService\r\n","import axios from 'axios'\r\nimport { toast } from 'react-toastify'\r\nimport configFile from '../config.json'\r\nimport localStorageService from './localStorage.service'\r\nimport authService from './auth.service'\r\n\r\nconst http = axios.create({\r\n  baseURL: configFile.apiEndpoint\r\n})\r\n\r\nhttp.interceptors.request.use(\r\n  async function (config) {\r\n    if (configFile.isFireBase) {\r\n      const containSlash = /\\/$/gi.test(config.url)\r\n      config.url =\r\n        (containSlash ? config.url.slice(0, -1) : config.url) + '.json'\r\n      const expiresDate = localStorageService.getTokenExpiresDate()\r\n      const refreshToken = localStorageService.getRefreshToken()\r\n      if (refreshToken && expiresDate < Date.now()) {\r\n        const data = await authService.refresh()\r\n\r\n        localStorageService.setTokens({\r\n          refreshToken: data.refresh_token,\r\n          idToken: data.id_token,\r\n          expiresIn: data.expires_id,\r\n          localId: data.user_id\r\n        })\r\n      }\r\n      const accessToken = localStorageService.getAccessToken()\r\n      if (accessToken) config.params = { ...config.params, auth: accessToken }\r\n    }\r\n    return config\r\n  },\r\n  function (error) {\r\n    return Promise.reject(error)\r\n  }\r\n)\r\nfunction transformData(data) {\r\n  return data && !data._id\r\n    ? Object.keys(data).map((key) => ({\r\n        ...data[key]\r\n      }))\r\n    : data\r\n}\r\nhttp.interceptors.response.use(\r\n  (res) => {\r\n    if (configFile.isFireBase) res.data = { content: transformData(res.data) }\r\n\r\n    return res\r\n  },\r\n  function (error) {\r\n    const expectedErrors =\r\n      error.response &&\r\n      error.response.status >= 400 &&\r\n      error.response.status < 500\r\n\r\n    if (!expectedErrors) {\r\n      console.log(error)\r\n      toast.error('Something was wrong. Try it later')\r\n    }\r\n    return Promise.reject(error)\r\n  }\r\n)\r\nconst httpService = {\r\n  get: http.get,\r\n  post: http.post,\r\n  put: http.put,\r\n  delete: http.delete,\r\n  patch: http.patch\r\n}\r\nexport default httpService\r\n","import httpService from './http.service'\r\nconst qualityEndpoint = 'quality/'\r\n\r\nconst qualityService = {\r\n  fetchAll: async () => {\r\n    const { data } = await httpService.get(qualityEndpoint)\r\n    return data\r\n  }\r\n}\r\nexport default qualityService\r\n","function isOutdated(date) {\r\n  if (Date.now() - date > 10 * 60 * 1000) return true\r\n\r\n  return false\r\n}\r\n\r\nexport default isOutdated\r\n","import { createSlice } from '@reduxjs/toolkit'\r\nimport qualityService from '../services/quality.service'\r\nimport isOutdated from '../utils/isOutdated'\r\n\r\nconst qualitiesSlice = createSlice({\r\n  name: 'qualities',\r\n  initialState: {\r\n    entities: null,\r\n    isLoading: true,\r\n    error: null,\r\n    lastFetch: null\r\n  },\r\n  reducers: {\r\n    qualitiesRequested: (state) => {\r\n      state.isLoading = true\r\n    },\r\n    qualitiesReceived: (state, action) => {\r\n      state.entities = action.payload\r\n      state.lastFetch = Date.now()\r\n      state.isLoading = false\r\n    },\r\n    qualitiesRequestFailed: (state, action) => {\r\n      state.error = action.payload\r\n      state.isLoading = false\r\n    }\r\n  }\r\n})\r\n\r\nconst { reducer: qualitiesReducer, actions } = qualitiesSlice\r\nconst { qualitiesRequested, qualitiesReceived, qualitiesRequestFailed } =\r\n  actions\r\n\r\nexport const loadQualitiesList = () => async (dispatch, getState) => {\r\n  const { lastFetch } = getState().qualities\r\n  if (isOutdated(lastFetch)) {\r\n    dispatch(qualitiesRequested())\r\n    try {\r\n      const { content } = await qualityService.fetchAll()\r\n      dispatch(qualitiesReceived(content))\r\n    } catch (error) {\r\n      dispatch(qualitiesRequestFailed(error.message))\r\n    }\r\n  }\r\n}\r\n\r\nexport const getQualities = () => (state) => state.qualities.entities\r\nexport const getQualitiesLoadingStatus = () => (state) =>\r\n  state.qualities.isLoading\r\nexport const getQualitiesByIds = (qualitiesIds) => (state) => {\r\n  if (state.qualities.entities) {\r\n    const qualitiesArray = []\r\n    for (const qualId of qualitiesIds) {\r\n      for (const quality of state.qualities.entities) {\r\n        if (quality._id === qualId) {\r\n          qualitiesArray.push(quality)\r\n          break\r\n        }\r\n      }\r\n    }\r\n    return qualitiesArray\r\n  }\r\n  return []\r\n}\r\n\r\nexport default qualitiesReducer\r\n","import httpService from './http.service'\r\n\r\nconst professionEndpoint = 'profession/'\r\n\r\nconst professionService = {\r\n  get: async () => {\r\n    const { data } = await httpService.get(professionEndpoint)\r\n    return data\r\n  }\r\n}\r\nexport default professionService\r\n","import { createSlice } from '@reduxjs/toolkit'\r\nimport professionService from '../services/profession.service'\r\nimport isOutdated from '../utils/isOutdated'\r\n\r\nconst professionsSlice = createSlice({\r\n  name: 'professions',\r\n  initialState: {\r\n    entities: null,\r\n    isLoading: true,\r\n    error: null,\r\n    lastFetch: null\r\n  },\r\n  reducers: {\r\n    professionsRequested: (state) => {\r\n      state.isLoading = true\r\n    },\r\n    professionsReceived: (state, action) => {\r\n      state.entities = action.payload\r\n      state.lastFetch = Date.now()\r\n      state.isLoading = false\r\n    },\r\n    professionsRequestFailed: (state, action) => {\r\n      state.error = action.payload\r\n      state.isLoading = false\r\n    }\r\n  }\r\n})\r\n\r\nconst { reducer: professionsReducer, actions } = professionsSlice\r\nconst { professionsRequested, professionsReceived, professionsRequestFailed } =\r\n  actions\r\n\r\nexport const loadProfessionsList = () => async (dispatch, getState) => {\r\n  const { lastFetch } = getState().professions\r\n  if (isOutdated(lastFetch)) {\r\n    dispatch(professionsRequested())\r\n    try {\r\n      const { content } = await professionService.get()\r\n      dispatch(professionsReceived(content))\r\n    } catch (error) {\r\n      dispatch(professionsRequestFailed(error.message))\r\n    }\r\n  }\r\n}\r\n\r\nexport const getProfessions = () => (state) => state.professions.entities\r\nexport const getProfessionsLoadingStatus = () => (state) =>\r\n  state.professions.isLoading\r\nexport const getProfessionById = (id) => (state) => {\r\n  if (state.professions.entities)\r\n    return state.professions.entities.find((p) => p._id === id)\r\n}\r\n\r\nexport default professionsReducer\r\n","import httpService from './http.service'\r\nimport localStorageService from './localStorage.service'\r\n\r\nconst userEndpoint = 'user/'\r\n\r\nconst userService = {\r\n  get: async () => {\r\n    const { data } = await httpService.get(userEndpoint)\r\n    return data\r\n  },\r\n  create: async (payload) => {\r\n    const { data } = await httpService.put(userEndpoint + payload._id, payload)\r\n    return data\r\n  },\r\n  getCurrentUser: async () => {\r\n    const { data } = await httpService.get(\r\n      userEndpoint + localStorageService.getUserId()\r\n    )\r\n    return data\r\n  },\r\n  update: async (payload) => {\r\n    const { data } = await httpService.patch(\r\n      userEndpoint + localStorageService.getUserId(),\r\n      payload\r\n    )\r\n    return data\r\n  }\r\n}\r\nexport default userService\r\n","function getRandomInt(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1) + min)\r\n}\r\n\r\nexport default getRandomInt\r\n","import { createBrowserHistory } from 'history'\r\n\r\nconst history = createBrowserHistory()\r\nexport default history\r\n","export function generateAuthError(message) {\r\n  switch (message) {\r\n    case 'INVALID_PASSWORD':\r\n      return 'Email или пароль введены некорректно'\r\n    case 'EMAIL_EXISTS':\r\n      return 'Пользователь с таким Email уже существует'\r\n    default:\r\n      return 'Слишком много попыток входа. Попробуйте позже'\r\n  }\r\n}\r\n","import { createAction, createSlice } from '@reduxjs/toolkit'\r\nimport userService from '../services/user.service'\r\nimport authService from '../services/auth.service'\r\nimport localStorageService from '../services/localStorage.service'\r\nimport getRandomInt from '../utils/getRandomInt'\r\nimport history from '../utils/history'\r\nimport { generateAuthError } from '../utils/generateAuthError'\r\n\r\nconst initialState = localStorageService.getAccessToken()\r\n  ? {\r\n      entities: null,\r\n      isLoading: true,\r\n      error: null,\r\n      auth: { userId: localStorageService.getUserId() },\r\n      isLoggedIn: true,\r\n      dataLoaded: false\r\n    }\r\n  : {\r\n      entities: null,\r\n      isLoading: false,\r\n      error: null,\r\n      auth: null,\r\n      isLoggedIn: false,\r\n      dataLoaded: false\r\n    }\r\n\r\nconst usersSlice = createSlice({\r\n  name: 'users',\r\n  initialState,\r\n  reducers: {\r\n    usersRequested: (state) => {\r\n      state.isLoading = true\r\n    },\r\n    usersReceived: (state, action) => {\r\n      state.entities = action.payload\r\n      state.dataLoaded = true\r\n      state.isLoading = false\r\n    },\r\n    usersRequestFailed: (state, action) => {\r\n      state.error = action.payload\r\n      state.isLoading = false\r\n    },\r\n    authRequestSuccess: (state, action) => {\r\n      state.auth = action.payload\r\n      state.isLoggedIn = true\r\n    },\r\n    authRequestFailed: (state, action) => {\r\n      state.error = action.payload\r\n    },\r\n    userCreated: (state, action) => {\r\n      if (!Array.isArray(state.entities)) state.entities = []\r\n\r\n      state.entities.push(action.payload)\r\n    },\r\n    userLoggedOut: (state) => {\r\n      state.entities = null\r\n      state.isLoggedIn = false\r\n      state.auth = null\r\n      state.dataLoaded = false\r\n    },\r\n    userUpdateSuccessed: (state, action) => {\r\n      state.entities[\r\n        state.entities.findIndex((u) => u._id === action.payload._id)\r\n      ] = action.payload\r\n    },\r\n    authRequested: (state) => {\r\n      state.error = null\r\n    }\r\n  }\r\n})\r\n\r\nconst { reducer: usersReducer, actions } = usersSlice\r\nconst {\r\n  usersRequested,\r\n  usersReceived,\r\n  usersRequestFailed,\r\n  authRequestSuccess,\r\n  authRequestFailed,\r\n  userCreated,\r\n  userLoggedOut,\r\n  userUpdateSuccessed\r\n} = actions\r\n\r\nconst authRequested = createAction('users/authRequested')\r\nconst userCreateRequested = createAction('users/userCreateRequested')\r\nconst createUserFailed = createAction('users/createUserFailed')\r\nconst userUpdateRequested = createAction('users/userUpdateRequested')\r\nconst userUpdateFailed = createAction('users/userUpdateFailed')\r\n\r\nexport const login =\r\n  ({ payload, redirect }) =>\r\n  async (dispatch) => {\r\n    const { email, password } = payload\r\n    dispatch(authRequested())\r\n    try {\r\n      const data = await authService.login({ email, password })\r\n      dispatch(authRequestSuccess({ userId: data.localId }))\r\n      localStorageService.setTokens(data)\r\n      history.push(redirect)\r\n    } catch (error) {\r\n      const { code, message } = error.response.data.error\r\n      if (code === 400) {\r\n        const errorMessage = generateAuthError(message)\r\n        dispatch(authRequestFailed(errorMessage))\r\n      } else dispatch(authRequestFailed(error.message))\r\n    }\r\n  }\r\n\r\nexport const signUp =\r\n  ({ email, password, ...rest }) =>\r\n  async (dispatch) => {\r\n    dispatch(authRequested())\r\n    try {\r\n      const data = await authService.register({ email, password })\r\n      localStorageService.setTokens(data)\r\n      dispatch(authRequestSuccess({ userId: data.localId }))\r\n      dispatch(\r\n        createUser({\r\n          _id: data.localId,\r\n          email,\r\n          rate: getRandomInt(1, 5),\r\n          completedMeetings: getRandomInt(0, 200),\r\n          image: `https://avatars.dicebear.com/api/avataaars/${(\r\n            Math.random() + 1\r\n          )\r\n            .toString(36)\r\n            .substring(7)}.svg`,\r\n          ...rest\r\n        })\r\n      )\r\n    } catch (error) {\r\n      dispatch(authRequestFailed(error.message))\r\n    }\r\n  }\r\n\r\nexport const logOut = () => (dispatch) => {\r\n  localStorageService.removeAuthData()\r\n  dispatch(userLoggedOut())\r\n  history.push('/')\r\n}\r\n\r\nfunction createUser(payload) {\r\n  return async function (dispatch) {\r\n    dispatch(userCreateRequested())\r\n    try {\r\n      const { content } = await userService.create(payload)\r\n      dispatch(userCreated(content))\r\n      history.push('/users')\r\n    } catch (error) {\r\n      dispatch(createUserFailed(error.message))\r\n    }\r\n  }\r\n}\r\n\r\nexport const loadUsersList = () => async (dispatch) => {\r\n  dispatch(usersRequested())\r\n  try {\r\n    const { content } = await userService.get()\r\n    dispatch(usersReceived(content))\r\n  } catch (error) {\r\n    dispatch(usersRequestFailed(error.message))\r\n  }\r\n}\r\n\r\nexport const updateUser = (payload) => async (dispatch) => {\r\n  dispatch(userUpdateRequested())\r\n  try {\r\n    const { content } = await userService.update(payload)\r\n    dispatch(userUpdateSuccessed(content))\r\n    history.push(`/users/${content._id}`)\r\n  } catch (error) {\r\n    dispatch(userUpdateFailed(error.message))\r\n  }\r\n}\r\n\r\nexport const getUsersList = () => (state) => state.users.entities\r\nexport const getCurrentUserData = () => (state) => {\r\n  return state.users.entities\r\n    ? state.users.entities.find((u) => u._id === state.users.auth.userId)\r\n    : null\r\n}\r\nexport const getUserById = (userId) => (state) => {\r\n  if (state.users.entities)\r\n    return state.users.entities.find((u) => u._id === userId)\r\n}\r\n\r\nexport const getIsLoggedIn = () => (state) => state.users.isLoggedIn\r\nexport const getDataStatus = () => (state) => state.users.dataLoaded\r\nexport const getUsersLoadingStatus = () => (state) => state.users.isLoading\r\nexport const getCurrentUserId = () => (state) => state.users.auth.userId\r\nexport const getAuthErrors = () => (state) => state.users.error\r\n\r\nexport default usersReducer\r\n","import React, { useEffect, useState } from 'react'\r\nimport { validator } from '../../../utils/validator'\r\nimport TextField from '../../common/form/textField'\r\nimport SelectField from '../../common/form/selectField'\r\nimport RadioField from '../../common/form/radioField'\r\nimport MultiSelectField from '../../common/form/multiSelectField'\r\nimport BackHistoryButton from '../../common/backButton'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  getQualities,\r\n  getQualitiesLoadingStatus\r\n} from '../../../store/qualities'\r\nimport {\r\n  getProfessions,\r\n  getProfessionsLoadingStatus\r\n} from '../../../store/professions'\r\nimport { getCurrentUserData, updateUser } from '../../../store/users'\r\n\r\nconst EditUserPage = () => {\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [data, setData] = useState()\r\n  const currentUser = useSelector(getCurrentUserData())\r\n  const dispatch = useDispatch()\r\n  const qualities = useSelector(getQualities())\r\n  const qualitiesLoading = useSelector(getQualitiesLoadingStatus())\r\n  const qualitiesList = qualities.map((q) => ({\r\n    label: q.name,\r\n    value: q._id\r\n  }))\r\n  const professions = useSelector(getProfessions())\r\n  const professionLoading = useSelector(getProfessionsLoadingStatus())\r\n  const professionsList = professions.map((p) => ({\r\n    label: p.name,\r\n    value: p._id\r\n  }))\r\n  const [errors, setErrors] = useState({})\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    const isValid = validate()\r\n    if (!isValid) return\r\n    dispatch(\r\n      updateUser({\r\n        ...data,\r\n        qualities: data.qualities.map((q) => q.value)\r\n      })\r\n    )\r\n  }\r\n  function getQualitiesListByIds(qualitiesIds) {\r\n    const qualitiesArray = []\r\n    for (const qualId of qualitiesIds) {\r\n      for (const quality of qualities) {\r\n        if (quality._id === qualId) {\r\n          qualitiesArray.push(quality)\r\n          break\r\n        }\r\n      }\r\n    }\r\n    return qualitiesArray\r\n  }\r\n  const transformData = (data) => {\r\n    const result = getQualitiesListByIds(data).map((qual) => ({\r\n      label: qual.name,\r\n      value: qual._id\r\n    }))\r\n    return result\r\n  }\r\n  useEffect(() => {\r\n    if (!professionLoading && !qualitiesLoading && currentUser && !data) {\r\n      setData({\r\n        ...currentUser,\r\n        qualities: transformData(currentUser.qualities)\r\n      })\r\n    }\r\n  }, [professionLoading, qualitiesLoading, currentUser, data])\r\n  useEffect(() => {\r\n    if (data && isLoading) setIsLoading(false)\r\n  }, [data])\r\n\r\n  const validatorConfig = {\r\n    email: {\r\n      isRequired: {\r\n        message: 'Электронная почта обязательна для заполнения'\r\n      },\r\n      isEmail: {\r\n        message: 'Email введен некорректно'\r\n      }\r\n    },\r\n    name: {\r\n      isRequired: {\r\n        message: 'Введите ваше имя'\r\n      }\r\n    }\r\n  }\r\n  useEffect(() => validate(), [data])\r\n  const handleChange = (target) => {\r\n    setData((prevState) => ({\r\n      ...prevState,\r\n      [target.name]: target.value\r\n    }))\r\n  }\r\n  const validate = () => {\r\n    const errors = validator(data, validatorConfig)\r\n    setErrors(errors)\r\n    return Object.keys(errors).length === 0\r\n  }\r\n  const isValid = Object.keys(errors).length === 0\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <BackHistoryButton />\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 offset-md-3 shadow p-4\">\r\n          {!isLoading && Object.keys(professions).length > 0 ? (\r\n            <form onSubmit={handleSubmit}>\r\n              <TextField\r\n                label=\"Имя\"\r\n                name=\"name\"\r\n                value={data.name}\r\n                onChange={handleChange}\r\n                error={errors.name}\r\n              />\r\n              <TextField\r\n                label=\"Электронная почта\"\r\n                name=\"email\"\r\n                value={data.email}\r\n                onChange={handleChange}\r\n                error={errors.email}\r\n              />\r\n              <SelectField\r\n                label=\"Выбери свою профессию\"\r\n                defaultOption=\"Choose...\"\r\n                options={professionsList}\r\n                name=\"profession\"\r\n                onChange={handleChange}\r\n                value={data.profession}\r\n                error={errors.profession}\r\n              />\r\n              <RadioField\r\n                options={[\r\n                  { name: 'Male', value: 'male' },\r\n                  { name: 'Female', value: 'female' },\r\n                  { name: 'Other', value: 'other' }\r\n                ]}\r\n                value={data.sex}\r\n                name=\"sex\"\r\n                onChange={handleChange}\r\n                label=\"Выберите ваш пол\"\r\n              />\r\n              <MultiSelectField\r\n                defaultValue={data.qualities}\r\n                options={qualitiesList}\r\n                onChange={handleChange}\r\n                name=\"qualities\"\r\n                label=\"Выберите ваши качества\"\r\n              />\r\n              <button\r\n                type=\"submit\"\r\n                disabled={!isValid}\r\n                className=\"btn btn-primary w-100 mx-auto\"\r\n              >\r\n                Обновить\r\n              </button>\r\n            </form>\r\n          ) : (\r\n            'Loading...'\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EditUserPage\r\n","import EditUserPage from './editUserPage'\r\nexport default EditUserPage\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\nimport { getCurrentUserId } from '../../store/users'\r\n\r\nconst UserCard = ({ user }) => {\r\n  const history = useHistory()\r\n  const currentUserId = useSelector(getCurrentUserId())\r\n\r\n  const handleClick = () => {\r\n    history.push(history.location.pathname + '/edit')\r\n  }\r\n  return (\r\n    <div className=\"card mb-3\">\r\n      <div className=\"card-body\">\r\n        {currentUserId === user._id && (\r\n          <button\r\n            className=\"position-absolute top-0 end-0 btn btn-light btn-sm\"\r\n            onClick={handleClick}\r\n          >\r\n            <i className=\"bi bi-gear\"></i>\r\n          </button>\r\n        )}\r\n\r\n        <div className=\"d-flex flex-column align-items-center text-center position-relative\">\r\n          <img src={user.image} className=\"rounded-circle\" width=\"150\" />\r\n          <div className=\"mt-3\">\r\n            <h4>{user.name}</h4>\r\n            <p className=\"text-secondary mb-1\">{user.profession.name}</p>\r\n            <div className=\"text-muted\">\r\n              <i\r\n                className=\"bi bi-caret-down-fill text-primary\"\r\n                role=\"button\"\r\n              ></i>\r\n              <i className=\"bi bi-caret-up text-secondary\" role=\"button\"></i>\r\n              <span className=\"ms-2\">{user.rate}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nUserCard.propTypes = {\r\n  user: PropTypes.object\r\n}\r\n\r\nexport default UserCard\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Quality = ({ _id, color, name }) => {\r\n  return (\r\n    <span className={'badge m-1 bg-' + color} key={_id}>\r\n      {name}\r\n    </span>\r\n  )\r\n}\r\nQuality.propTypes = {\r\n  _id: PropTypes.string.isRequired,\r\n  color: PropTypes.string,\r\n  name: PropTypes.string\r\n}\r\n\r\nexport default Quality\r\n","import Qualities from './qualitiesList'\r\nexport default Qualities\r\n","import React, { useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Quality from './quality'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  getQualitiesByIds,\r\n  getQualitiesLoadingStatus,\r\n  loadQualitiesList\r\n} from '../../../store/qualities'\r\n\r\nconst QualitiesList = ({ qualities }) => {\r\n  const dispatch = useDispatch()\r\n  const isLoading = useSelector(getQualitiesLoadingStatus())\r\n  const qualitiesList = useSelector(getQualitiesByIds(qualities))\r\n  useEffect(() => {\r\n    dispatch(loadQualitiesList())\r\n  }, [])\r\n\r\n  if (isLoading) return 'Loading...'\r\n\r\n  return (\r\n    <>\r\n      {qualitiesList.map((qual) => (\r\n        <Quality key={qual._id} {...qual} />\r\n      ))}\r\n    </>\r\n  )\r\n}\r\n\r\nQualitiesList.propTypes = {\r\n  qualities: PropTypes.array\r\n}\r\n\r\nexport default QualitiesList\r\n","import React from 'react'\r\nimport Qualities from './qualities'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst QualitiesCard = ({ data }) => {\r\n  return (\r\n    <div className=\"card mb-3\">\r\n      <div className=\"card-body d-flex flex-column justify-content-center text-center\">\r\n        <h5 className=\"card-title\">\r\n          <span>Qualities</span>\r\n        </h5>\r\n        <p className=\"card-text\">\r\n          <Qualities qualities={data} />\r\n        </p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nQualitiesCard.propTypes = {\r\n  data: PropTypes.array\r\n}\r\n\r\nexport default QualitiesCard\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nconst MeetingsCard = ({ value }) => {\r\n  return (\r\n    <div className=\"card mb-3\">\r\n      <div className=\"card-body d-flex flex-column justify-content-center text-center\">\r\n        <h5 className=\"card-title\">\r\n          <span>Completed meetings</span>\r\n        </h5>\r\n\r\n        <h1 className=\"display-1\">{value}</h1>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nMeetingsCard.propTypes = {\r\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\r\n}\r\n\r\nexport default MeetingsCard\r\n","export function displayDate(data) {\r\n  const date = new Date(parseInt(data))\r\n  const dateNow = new Date()\r\n  const yearDif = dateNow.getFullYear() - date.getFullYear()\r\n  if (yearDif === 0) {\r\n    const dayDif = dateNow.getDate() - date.getDate()\r\n    if (dayDif === 0) {\r\n      const hourDif = dateNow.getHours() - date.getHours()\r\n      if (hourDif === 0) {\r\n        const minutesDif = dateNow.getMinutes() - date.getMinutes()\r\n\r\n        if (minutesDif >= 0 && minutesDif < 5) return '1 минуту назад'\r\n        if (minutesDif >= 5 && minutesDif < 10) return '5 минут назад'\r\n        if (minutesDif >= 10 && minutesDif < 30) return '10 минут назад'\r\n\r\n        return '30 минут назад'\r\n      }\r\n      return `${date.getHours()}:${date.getMinutes()}`\r\n    }\r\n\r\n    return `${date.getDate()} ${date.toLocaleString('default', {\r\n      month: 'long'\r\n    })}`\r\n  }\r\n  return date.getFullYear() + '.' + (date.getMonth() + 1) + '_' + date.getDate()\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { displayDate } from '../../../utils/displayDate'\r\nimport { useSelector } from 'react-redux'\r\nimport { getCurrentUserId, getUserById } from '../../../store/users'\r\n\r\nconst Comment = ({\r\n  content,\r\n  created_at: created,\r\n  _id: id,\r\n  userId,\r\n  onRemove\r\n}) => {\r\n  const currentUserId = useSelector(getCurrentUserId())\r\n  const user = useSelector(getUserById(userId))\r\n\r\n  return (\r\n    <div className=\"bg-light card-body  mb-3\">\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <div className=\"d-flex flex-start \">\r\n            <img\r\n              src={user.image}\r\n              className=\"rounded-circle shadow-1-strong me-3\"\r\n              alt=\"avatar\"\r\n              width=\"65\"\r\n              height=\"65\"\r\n            />\r\n            <div className=\"flex-grow-1 flex-shrink-1\">\r\n              <div className=\"mb-4\">\r\n                <div className=\"d-flex justify-content-between align-items-center\">\r\n                  <p className=\"mb-1 \">\r\n                    {user && user.name}{' '}\r\n                    <span className=\"small\">- {displayDate(created)}</span>\r\n                  </p>\r\n                  {currentUserId === userId && (\r\n                    <button\r\n                      className=\"btn btn-sm text-primary d-flex align-items-center\"\r\n                      onClick={() => onRemove(id)}\r\n                    >\r\n                      <i className=\"bi bi-x-lg\"></i>\r\n                    </button>\r\n                  )}\r\n                </div>\r\n                <p className=\"small mb-0\">{content}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nComment.propTypes = {\r\n  content: PropTypes.string,\r\n  edited_at: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n  created_at: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n  userId: PropTypes.string,\r\n  onRemove: PropTypes.func,\r\n  _id: PropTypes.string\r\n}\r\n\r\nexport default Comment\r\n","import React from 'react'\r\nimport Comment from './comment'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst CommentsList = ({ comments, onRemove }) => {\r\n  return comments.map((comment) => (\r\n    <Comment key={comment._id} {...comment} onRemove={onRemove} />\r\n  ))\r\n}\r\nCommentsList.propTypes = {\r\n  comment: PropTypes.array,\r\n  onRemove: PropTypes.func\r\n}\r\n\r\nexport default CommentsList\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst TextAreaField = ({ label, name, value, onChange, error }) => {\r\n  const handleChange = ({ target }) => {\r\n    onChange({ name: target.name, value: target.value })\r\n  }\r\n  const getInputClasses = () => {\r\n    return 'form-control' + (error ? ' is-invalid' : '')\r\n  }\r\n\r\n  return (\r\n    <div className=\"mb-4\">\r\n      <label htmlFor={name}> {label}</label>\r\n      <div className=\"input-group has-validation\">\r\n        <textarea\r\n          id={name}\r\n          name={name}\r\n          value={value}\r\n          onChange={handleChange}\r\n          className={getInputClasses()}\r\n        />\r\n\r\n        {error && <div className=\"invalid-feedback \">{error}</div>}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nTextAreaField.defaultProps = {\r\n  type: 'text'\r\n}\r\nTextAreaField.propTypes = {\r\n  label: PropTypes.string,\r\n  type: PropTypes.string,\r\n  name: PropTypes.string,\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  error: PropTypes.string\r\n}\r\n\r\nexport default TextAreaField\r\n","import React, { useState } from 'react'\r\nimport TextAreaField from '../form/textAreaField'\r\nimport { validator } from '../../../utils/validator'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AddCommentForm = ({ onSubmit }) => {\r\n  const [data, setData] = useState({})\r\n  const [errors, setErrors] = useState({})\r\n  const handleChange = (target) => {\r\n    setData((prevState) => ({\r\n      ...prevState,\r\n      [target.name]: target.value\r\n    }))\r\n  }\r\n  const validatorConfig = {\r\n    content: {\r\n      isRequired: {\r\n        message: 'Сообщение не может быть пустым'\r\n      }\r\n    }\r\n  }\r\n\r\n  const validate = () => {\r\n    const errors = validator(data, validatorConfig)\r\n    setErrors(errors)\r\n    return Object.keys(errors).length === 0\r\n  }\r\n  const clearForm = () => {\r\n    setData({})\r\n    setErrors({})\r\n  }\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    const isValid = validate()\r\n    if (!isValid) return\r\n    onSubmit(data)\r\n    clearForm()\r\n  }\r\n  return (\r\n    <div>\r\n      <h2>New comment</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <TextAreaField\r\n          value={data.content || ''}\r\n          onChange={handleChange}\r\n          name=\"content\"\r\n          label=\"Сообщение\"\r\n          error={errors.content}\r\n        />\r\n        <div className=\"d-flex justify-content-end\">\r\n          <button className=\"btn btn-primary\">Опубликовать</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\nAddCommentForm.propTypes = {\r\n  onSubmit: PropTypes.func\r\n}\r\n\r\nexport default AddCommentForm\r\n","import CommentsList from './commentsList'\r\nimport AddCommentForm from './addCommentForm'\r\nexport default CommentsList\r\nexport { AddCommentForm }\r\n","import httpService from './http.service'\r\nconst commentEndpoint = 'comment/'\r\n\r\nconst commentService = {\r\n  createComment: async (payload) => {\r\n    const { data } = await httpService.put(\r\n      commentEndpoint + payload._id,\r\n      payload\r\n    )\r\n    return data\r\n  },\r\n  getComments: async (pageId) => {\r\n    const { data } = await httpService.get(commentEndpoint, {\r\n      params: {\r\n        orderBy: '\"pageId\"',\r\n        equalTo: `\"${pageId}\"`\r\n      }\r\n    })\r\n    return data\r\n  },\r\n  removeComment: async (commentId) => {\r\n    const { data } = await httpService.delete(commentEndpoint + commentId)\r\n    return data\r\n  }\r\n}\r\nexport default commentService\r\n","import { createAction, createSlice } from '@reduxjs/toolkit'\r\nimport { nanoid } from 'nanoid'\r\nimport commentService from '../services/comment.service'\r\n\r\nconst commentsSlice = createSlice({\r\n  name: 'comments',\r\n  initialState: {\r\n    entities: null,\r\n    isLoading: true,\r\n    error: null\r\n  },\r\n  reducers: {\r\n    commentsRequested: (state) => {\r\n      state.isLoading = true\r\n    },\r\n    commentsReceived: (state, action) => {\r\n      state.entities = action.payload\r\n      state.isLoading = false\r\n    },\r\n    commentsRequestFailed: (state, action) => {\r\n      state.error = action.payload\r\n      state.isLoading = false\r\n    },\r\n    commentCreated: (state, action) => {\r\n      if (!Array.isArray(state.entities)) state.entities = []\r\n\r\n      state.entities.push(action.payload)\r\n    },\r\n    commentRemove: (state, action) => {\r\n      state.entities = state.entities.filter((c) => c._id !== action.payload)\r\n    }\r\n  }\r\n})\r\n\r\nconst { reducer: commentsReducer, actions } = commentsSlice\r\nconst {\r\n  commentsRequested,\r\n  commentsReceived,\r\n  commentsRequestFailed,\r\n  commentCreated,\r\n  commentRemove\r\n} = actions\r\n\r\nconst createCommentRequested = createAction('comments/createCommentRequested')\r\nconst createCommentFailed = createAction('comments/createCommentFailed')\r\nconst removeCommentRequesred = createAction('comments/removeCommentRequesred')\r\nconst removeCommentFailed = createAction('comments/removeCommentFailed')\r\n\r\nexport const loadCommentsList = (userId) => async (dispatch) => {\r\n  dispatch(commentsRequested())\r\n  try {\r\n    const { content } = await commentService.getComments(userId)\r\n    dispatch(commentsReceived(content))\r\n  } catch (error) {\r\n    dispatch(commentsRequestFailed(error.message))\r\n  }\r\n}\r\nexport const createComment =\r\n  (data, userId, currentUserId) => async (dispatch) => {\r\n    dispatch(createCommentRequested())\r\n    const comment = {\r\n      ...data,\r\n      _id: nanoid(),\r\n      created_at: Date.now(),\r\n      pageId: userId,\r\n      userId: currentUserId\r\n    }\r\n    try {\r\n      const { content } = await commentService.createComment(comment)\r\n      dispatch(commentCreated(content))\r\n    } catch (error) {\r\n      dispatch(createCommentFailed(error.message))\r\n    }\r\n  }\r\n\r\nexport const removeComment = (id) => async (dispatch) => {\r\n  dispatch(removeCommentRequesred())\r\n  try {\r\n    const { content } = await commentService.removeComment(id)\r\n\r\n    if (content === null) dispatch(commentRemove(id))\r\n  } catch (error) {\r\n    dispatch(removeCommentFailed(error.message))\r\n  }\r\n}\r\n\r\nexport const getComments = () => (state) => state.comments.entities\r\nexport const getCommentsLoadingStatus = () => (state) =>\r\n  state.comments.isLoading\r\n\r\nexport default commentsReducer\r\n","import { orderBy } from 'lodash'\r\nimport React, { useEffect } from 'react'\r\nimport CommentsList, { AddCommentForm } from '../common/comments'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  getComments,\r\n  createComment,\r\n  getCommentsLoadingStatus,\r\n  loadCommentsList,\r\n  removeComment\r\n} from '../../store/comments'\r\nimport { useParams } from 'react-router-dom'\r\nimport { getCurrentUserId } from '../../store/users'\r\n\r\nconst Comments = () => {\r\n  const { userId } = useParams()\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    dispatch(loadCommentsList(userId))\r\n  }, [userId])\r\n  const currentUserId = useSelector(getCurrentUserId())\r\n  const isLoading = useSelector(getCommentsLoadingStatus())\r\n\r\n  const comments = useSelector(getComments())\r\n\r\n  const handleSubmit = (data) => {\r\n    dispatch(createComment(data, userId, currentUserId))\r\n  }\r\n  const handleRemoveComment = (id) => {\r\n    dispatch(removeComment(id))\r\n  }\r\n  const sortedComments = orderBy(comments, ['created_at'], ['desc'])\r\n  return (\r\n    <>\r\n      <div className=\"card mb-2\">\r\n        <div className=\"card-body \">\r\n          <AddCommentForm onSubmit={handleSubmit} />\r\n        </div>\r\n      </div>\r\n      {sortedComments.length > 0 && (\r\n        <div className=\"card mb-3\">\r\n          <div className=\"card-body \">\r\n            <h2>Comments</h2>\r\n            <hr />\r\n            {!isLoading ? (\r\n              <CommentsList\r\n                comments={sortedComments}\r\n                onRemove={handleRemoveComment}\r\n              />\r\n            ) : (\r\n              'Loading...'\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Comments\r\n","import UserPage from './userPage'\r\nexport default UserPage\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport UserCard from '../../ui/userCard'\r\nimport QualitiesCard from '../../ui/qualitiesCard'\r\nimport MeetingsCard from '../../ui/meetingsCard'\r\nimport Comments from '../../ui/comments'\r\nimport { useSelector } from 'react-redux'\r\nimport { getUserById } from '../../../store/users'\r\n\r\nconst UserPage = ({ userId }) => {\r\n  const user = useSelector(getUserById(userId))\r\n\r\n  if (user) {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row gutters-sm\">\r\n          <div className=\"col-md-4 mb-3\">\r\n            <UserCard user={user} />\r\n            <QualitiesCard data={user.qualities} />\r\n            <MeetingsCard value={user.completedMeetings} />\r\n          </div>\r\n          <div className=\"col-md-8\">\r\n            <Comments />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  } else return <h1>Loading</h1>\r\n}\r\n\r\nUserPage.propTypes = {\r\n  userId: PropTypes.string.isRequired\r\n}\r\n\r\nexport default UserPage\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport _ from 'lodash'\r\nconst Pagination = ({ itemsCount, pageSize, onPageChange, currentPage }) => {\r\n  const pagesCount = Math.ceil(itemsCount / pageSize)\r\n  if (pagesCount === 1) return null\r\n  const pages = _.range(1, pagesCount + 1)\r\n\r\n  return (\r\n    <nav>\r\n      <ul className=\"pagination\">\r\n        {pages.map((page) => (\r\n          <li\r\n            className={'page-item ' + (page === currentPage ? 'active' : '')}\r\n            key={'page_' + page}\r\n          >\r\n            <button\r\n              className=\"page-link\"\r\n              onClick={() => {\r\n                onPageChange(page)\r\n              }}\r\n            >\r\n              {page}\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\nPagination.propTypes = {\r\n  itemsCount: PropTypes.number.isRequired,\r\n  pageSize: PropTypes.number.isRequired,\r\n  currentPage: PropTypes.number.isRequired,\r\n  onPageChange: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Pagination\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst GroupList = ({\r\n  items,\r\n  valueProperty,\r\n  contentProperty,\r\n  onItemSelect,\r\n  selectedItem\r\n}) => {\r\n  if (!Array.isArray(items)) {\r\n    return (\r\n      <ul className=\"list-group\">\r\n        {Object.keys(items).map((item) => (\r\n          <li\r\n            key={items[item][valueProperty]}\r\n            className={\r\n              'list-group-item' +\r\n              (items[item] === selectedItem ? ' active' : '')\r\n            }\r\n            onClick={() => onItemSelect(items[item])}\r\n            role=\"button\"\r\n          >\r\n            {items[item][contentProperty]}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    )\r\n  }\r\n  return (\r\n    <ul className=\"list-group\">\r\n      {items.map((item) => (\r\n        <li\r\n          key={item[valueProperty]}\r\n          className={\r\n            'list-group-item' + (item === selectedItem ? ' active' : '')\r\n          }\r\n          onClick={() => onItemSelect(item)}\r\n          role=\"button\"\r\n        >\r\n          {item[contentProperty]}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  )\r\n}\r\nGroupList.defaultProps = {\r\n  valueProperty: '_id',\r\n  contentProperty: 'name'\r\n}\r\nGroupList.propTypes = {\r\n  items: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n  valueProperty: PropTypes.string.isRequired,\r\n  contentProperty: PropTypes.string.isRequired,\r\n  onItemSelect: PropTypes.func,\r\n  selectedItem: PropTypes.object\r\n}\r\n\r\nexport default GroupList\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nconst SearchStatus = ({ length }) => {\r\n  const renderPhrase = (number) => {\r\n    const lastOne = Number(number.toString().slice(-1))\r\n    if (number > 4 && number < 15) return 'человек тусанет'\r\n\r\n    if (lastOne === 1) return 'человек тусанет'\r\n    if ([2, 3, 4].indexOf(lastOne) >= 0) return 'человека тусанут'\r\n    return 'человек тусанет'\r\n  }\r\n  return (\r\n    <h2>\r\n      <span className={'badge ' + (length > 0 ? 'bg-primary' : 'bg-danger')}>\r\n        {length > 0\r\n          ? `${length + ' ' + renderPhrase(length)}   с тобой сегодня`\r\n          : 'Никто с тобой не тусанет'}\r\n      </span>\r\n    </h2>\r\n  )\r\n}\r\nSearchStatus.propTypes = {\r\n  length: PropTypes.number\r\n}\r\n\r\nexport default SearchStatus\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nconst BookMark = ({ status, ...rest }) => {\r\n  return (\r\n    <button {...rest}>\r\n      <i className={'bi bi-bookmark' + (status ? '-heart-fill' : '')}></i>\r\n    </button>\r\n  )\r\n}\r\nBookMark.propTypes = {\r\n  status: PropTypes.bool\r\n}\r\n\r\nexport default BookMark\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport _ from 'lodash'\r\n\r\nconst TableBody = ({ data, columns }) => {\r\n  const renderContent = (item, column) => {\r\n    if (columns[column].component) {\r\n      const component = columns[column].component\r\n      if (typeof component === 'function') return component(item)\r\n\r\n      return component\r\n    }\r\n    return _.get(item, columns[column].path)\r\n  }\r\n  return (\r\n    <tbody>\r\n      {data.map((item) => (\r\n        <tr key={item._id}>\r\n          {Object.keys(columns).map((column) => (\r\n            <td key={column}>{renderContent(item, column)}</td>\r\n          ))}\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  )\r\n}\r\n\r\nTableBody.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n  columns: PropTypes.object.isRequired\r\n}\r\n\r\nexport default TableBody\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nconst TableHeader = ({ onSort, selectedSort, columns }) => {\r\n  const handleSort = (item) => {\r\n    if (selectedSort.path === item) {\r\n      onSort({\r\n        ...selectedSort,\r\n        order: selectedSort.order === 'asc' ? 'desc' : 'asc'\r\n      })\r\n    } else onSort({ path: item, order: 'asc' })\r\n  }\r\n  const rendeSortArrow = (selectedSort, currentPath) => {\r\n    if (selectedSort.path === currentPath) {\r\n      if (selectedSort.order === 'asc')\r\n        return <i className=\"bi bi-caret-down-fill\"></i>\r\n      else return <i className=\"bi bi-caret-up-fill\"></i>\r\n    }\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <thead>\r\n      <tr>\r\n        {Object.keys(columns).map((column) => (\r\n          <th\r\n            key={column}\r\n            onClick={\r\n              columns[column].path\r\n                ? () => handleSort(columns[column].path)\r\n                : undefined\r\n            }\r\n            {...{ role: columns[column].path && 'button' }}\r\n            scope=\"col\"\r\n          >\r\n            {columns[column].name}{' '}\r\n            {rendeSortArrow(selectedSort, columns[column].path)}\r\n          </th>\r\n        ))}\r\n      </tr>\r\n    </thead>\r\n  )\r\n}\r\nTableHeader.propTypes = {\r\n  onSort: PropTypes.func.isRequired,\r\n  selectedSort: PropTypes.object.isRequired,\r\n  columns: PropTypes.object.isRequired\r\n}\r\n\r\nexport default TableHeader\r\n","import Table from './table'\r\nimport TableBody from './tableBody'\r\nimport TableHeader from './tableHeader'\r\n\r\nexport default Table\r\n\r\nexport { TableBody, TableHeader }\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport TableBody from './tableBody'\r\nimport TableHeader from './tableHeader'\r\n\r\nconst Table = ({ onSort, selectedSort, columns, data, children }) => {\r\n  return (\r\n    <table className=\"table\">\r\n      {children || (\r\n        <>\r\n          <TableHeader {...{ onSort, selectedSort, columns }} />\r\n          <TableBody {...{ columns, data }} />\r\n        </>\r\n      )}\r\n    </table>\r\n  )\r\n}\r\nTable.propTypes = {\r\n  onSort: PropTypes.func,\r\n  selectedSort: PropTypes.object,\r\n  columns: PropTypes.object,\r\n  data: PropTypes.array,\r\n  children: PropTypes.array\r\n}\r\n\r\nexport default Table\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { useSelector } from 'react-redux'\r\nimport {\r\n  getProfessionById,\r\n  getProfessionsLoadingStatus\r\n} from '../../store/professions'\r\n\r\nconst Profession = ({ id }) => {\r\n  const isLoading = useSelector(getProfessionsLoadingStatus())\r\n  const prof = useSelector(getProfessionById(id))\r\n  if (!isLoading) return <p>{prof.name}</p>\r\n  else return 'Loading...'\r\n}\r\nProfession.propTypes = {\r\n  id: PropTypes.string\r\n}\r\nexport default Profession\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport BookMark from '../common/bookmark'\r\nimport Qualities from './qualities'\r\nimport Table from '../common/table'\r\nimport { Link } from 'react-router-dom'\r\nimport Profession from './profession'\r\n\r\nconst UserTable = ({\r\n  users,\r\n  onSort,\r\n  selectedSort,\r\n  onToggleBookMark,\r\n  ...rest\r\n}) => {\r\n  const columns = {\r\n    name: {\r\n      path: 'name',\r\n      name: 'Имя',\r\n      component: (user) => <Link to={`/users/${user._id}`}>{user.name}</Link>\r\n    },\r\n    qualities: {\r\n      name: 'Качества',\r\n      component: (user) => <Qualities qualities={user.qualities} />\r\n    },\r\n    professions: {\r\n      name: 'Профессия',\r\n      component: (user) => <Profession id={user.profession} />\r\n    },\r\n    completedMeetings: {\r\n      path: 'completedMeetings',\r\n      name: 'Встретился, раз'\r\n    },\r\n    rate: { path: 'rate', name: 'Оценка' },\r\n    bookmark: {\r\n      path: 'bookmark',\r\n      name: 'Избранное',\r\n      component: (user) => (\r\n        <BookMark\r\n          status={user.bookmark}\r\n          onClick={() => onToggleBookMark(user._id)}\r\n        />\r\n      )\r\n    }\r\n  }\r\n  return (\r\n    <Table\r\n      onSort={onSort}\r\n      selectedSort={selectedSort}\r\n      columns={columns}\r\n      data={users}\r\n    />\r\n  )\r\n}\r\n\r\nUserTable.propTypes = {\r\n  users: PropTypes.array.isRequired,\r\n  onSort: PropTypes.func.isRequired,\r\n  selectedSort: PropTypes.object.isRequired,\r\n  onToggleBookMark: PropTypes.func.isRequired\r\n}\r\n\r\nexport default UserTable\r\n","import UsersListPage from './usersListPage'\r\nexport default UsersListPage\r\n","import React, { useEffect, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { paginate } from '../../../utils/paginate'\r\nimport Pagination from '../../common/pagination'\r\nimport GroupList from '../../common/groupList'\r\nimport SearchStatus from '../../ui/searchStatus'\r\nimport UserTable from '../../ui/usersTable'\r\nimport _ from 'lodash'\r\nimport { useSelector } from 'react-redux'\r\nimport {\r\n  getProfessions,\r\n  getProfessionsLoadingStatus\r\n} from '../../../store/professions'\r\nimport { getCurrentUserId, getUsersList } from '../../../store/users'\r\n\r\nconst UsersListPage = () => {\r\n  const users = useSelector(getUsersList())\r\n  const currentUserId = useSelector(getCurrentUserId())\r\n\r\n  const professions = useSelector(getProfessions())\r\n  const professionsLoading = useSelector(getProfessionsLoadingStatus())\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [searchQuery, setSearchQuery] = useState('')\r\n  const [selectedProf, setSelectedProf] = useState()\r\n  const [sortBy, setSortBy] = useState({ path: 'name', order: 'asc' })\r\n  const pageSize = 8\r\n\r\n  const handleDelete = (userId) => {\r\n    // setUsers(users.filter((user) => user._id !== userId));\r\n    console.log(userId)\r\n  }\r\n  const handleToggleBookMark = (id) => {\r\n    const newArray = users.map((user) => {\r\n      if (user._id === id) return { ...user, bookmark: !user.bookmark }\r\n\r\n      return user\r\n    })\r\n    // setUsers(newArray);\r\n    console.log(newArray)\r\n  }\r\n\r\n  useEffect(() => {\r\n    setCurrentPage(1)\r\n  }, [selectedProf, searchQuery])\r\n\r\n  const handleProfessionSelect = (item) => {\r\n    if (searchQuery !== '') setSearchQuery('')\r\n    setSelectedProf(item)\r\n  }\r\n  const handleSearchQuery = ({ target }) => {\r\n    setSelectedProf(undefined)\r\n    setSearchQuery(target.value)\r\n  }\r\n\r\n  const handlePageChange = (pageIndex) => {\r\n    setCurrentPage(pageIndex)\r\n  }\r\n  const handleSort = (item) => {\r\n    setSortBy(item)\r\n  }\r\n\r\n  if (users) {\r\n    function filterUsers(data) {\r\n      const filteredUsers = searchQuery\r\n        ? data.filter(\r\n            (user) =>\r\n              user.name.toLowerCase().indexOf(searchQuery.toLowerCase()) !== -1\r\n          )\r\n        : selectedProf\r\n        ? data.filter(\r\n            (user) =>\r\n              JSON.stringify(user.profession) === JSON.stringify(selectedProf)\r\n          )\r\n        : data\r\n      return filteredUsers.filter((u) => u._id !== currentUserId)\r\n    }\r\n    const filteredUsers = filterUsers(users)\r\n    const count = filteredUsers.length\r\n    const sortedUsers = _.orderBy(filteredUsers, [sortBy.path], [sortBy.order])\r\n    const usersCrop = paginate(sortedUsers, currentPage, pageSize)\r\n    const clearFilter = () => {\r\n      setSelectedProf()\r\n    }\r\n\r\n    return (\r\n      <div className=\"d-flex\">\r\n        {professions && !professionsLoading && (\r\n          <div className=\"d-flex flex-column flex-shrink-0 p-3\">\r\n            <GroupList\r\n              selectedItem={selectedProf}\r\n              items={professions}\r\n              onItemSelect={handleProfessionSelect}\r\n            />\r\n            <button className=\"btn btn-secondary mt-2\" onClick={clearFilter}>\r\n              {' '}\r\n              Очистить\r\n            </button>\r\n          </div>\r\n        )}\r\n        <div className=\"d-flex flex-column\">\r\n          <SearchStatus length={count} />\r\n          <input\r\n            type=\"text\"\r\n            name=\"searchQuery\"\r\n            placeholder=\"Search...\"\r\n            onChange={handleSearchQuery}\r\n            value={searchQuery}\r\n          />\r\n          {count > 0 && (\r\n            <UserTable\r\n              users={usersCrop}\r\n              onSort={handleSort}\r\n              selectedSort={sortBy}\r\n              onDelete={handleDelete}\r\n              onToggleBookMark={handleToggleBookMark}\r\n            />\r\n          )}\r\n          <div className=\"d-flex justify-content-center\">\r\n            <Pagination\r\n              itemsCount={count}\r\n              pageSize={pageSize}\r\n              currentPage={currentPage}\r\n              onPageChange={handlePageChange}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  return 'loading...'\r\n}\r\nUsersListPage.propTypes = {\r\n  users: PropTypes.array\r\n}\r\n\r\nexport default UsersListPage\r\n","import _ from 'lodash'\r\n\r\nexport function paginate(items, pageNumber, pageSize) {\r\n  const startIndex = (pageNumber - 1) * pageSize\r\n  return _(items).slice(startIndex).take(pageSize).value()\r\n}\r\n","import { useDispatch, useSelector } from 'react-redux'\r\nimport { getDataStatus, loadUsersList } from '../../../store/users'\r\nimport { useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst UsersLoader = ({ children }) => {\r\n  const dataStatus = useSelector(getDataStatus())\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    if (!dataStatus) dispatch(loadUsersList())\r\n  }, [])\r\n  if (!dataStatus) return 'Loading'\r\n  return children\r\n}\r\n\r\nUsersLoader.propTypes = {\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node\r\n  ])\r\n}\r\n\r\nexport default UsersLoader\r\n","import React from 'react'\r\nimport { Redirect, useParams } from 'react-router-dom'\r\nimport EditUserPage from '../components/page/editUserPage'\r\nimport UserPage from '../components/page/userPage'\r\nimport UsersListPage from '../components/page/usersListPage'\r\nimport { useSelector } from 'react-redux'\r\nimport { getCurrentUserId } from '../store/users'\r\nimport UsersLoader from '../components/ui/hoc/usersLoader'\r\n\r\nconst Users = () => {\r\n  const params = useParams()\r\n  const { userId, edit } = params\r\n  const currentUserId = useSelector(getCurrentUserId())\r\n\r\n  return (\r\n    <>\r\n      <UsersLoader>\r\n        {userId ? (\r\n          edit ? (\r\n            userId === currentUserId ? (\r\n              <EditUserPage />\r\n            ) : (\r\n              <Redirect to={`/users/${currentUserId}/edit`} />\r\n            )\r\n          ) : (\r\n            <UserPage userId={userId} />\r\n          )\r\n        ) : (\r\n          <UsersListPage />\r\n        )}\r\n      </UsersLoader>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Users\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst CheckBoxField = ({ name, value, onChange, children, error }) => {\r\n  const handleChange = () => {\r\n    onChange({ name: name, value: !value })\r\n  }\r\n  const getInputClasses = () => {\r\n    return 'form-check-input' + (error ? ' is-invalid' : '')\r\n  }\r\n  return (\r\n    <div className=\"form-check mb-4\">\r\n      <input\r\n        className={getInputClasses()}\r\n        type=\"checkbox\"\r\n        value=\"\"\r\n        id={name}\r\n        onChange={handleChange}\r\n        checked={value}\r\n      />\r\n      <label className=\"form-check-label\" htmlFor={name}>\r\n        {children}\r\n      </label>\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  )\r\n}\r\nCheckBoxField.propTypes = {\r\n  name: PropTypes.string,\r\n  value: PropTypes.bool,\r\n  onChange: PropTypes.func,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node\r\n  ]),\r\n  error: PropTypes.string\r\n}\r\n\r\nexport default CheckBoxField\r\n","import React, { useEffect, useState } from 'react'\r\nimport { validator } from '../../utils/validator'\r\nimport TextField from '../common/form/textField'\r\nimport CheckBoxField from '../common/form/checkBoxField'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getAuthErrors, login } from '../../store/users'\r\n\r\nconst LoginForm = () => {\r\n  const [data, setData] = useState({\r\n    email: '',\r\n    password: '',\r\n    stayOn: false\r\n  })\r\n  const loginError = useSelector(getAuthErrors())\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n  const [errors, setErrors] = useState({})\r\n  const handleChange = (target) => {\r\n    setData((prevState) => ({\r\n      ...prevState,\r\n      [target.name]: target.value\r\n    }))\r\n  }\r\n\r\n  const validatorConfig = {\r\n    email: {\r\n      isRequired: {\r\n        message: 'Электронная почта обязательна для заполнения'\r\n      }\r\n    },\r\n    password: {\r\n      isRequired: {\r\n        message: 'Пароль обязателен для заполнения'\r\n      }\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    validate()\r\n  }, [data])\r\n  const validate = () => {\r\n    const errors = validator(data, validatorConfig)\r\n    setErrors(errors)\r\n    return Object.keys(errors).length === 0\r\n  }\r\n  const isValid = Object.keys(errors).length === 0\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    const isValid = validate()\r\n    if (!isValid) return\r\n    const redirect = history.location.state\r\n      ? history.location.state.from.pathname\r\n      : '/'\r\n\r\n    dispatch(login({ payload: data, redirect }))\r\n  }\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <TextField\r\n        label=\"Электронная почта\"\r\n        name=\"email\"\r\n        value={data.email}\r\n        onChange={handleChange}\r\n        error={errors.email}\r\n      />\r\n      <TextField\r\n        label=\"Пароль\"\r\n        type=\"password\"\r\n        name=\"password\"\r\n        value={data.password}\r\n        onChange={handleChange}\r\n        error={errors.password}\r\n      />\r\n      <CheckBoxField value={data.stayOn} onChange={handleChange} name=\"stayOn\">\r\n        Оставаться в системе\r\n      </CheckBoxField>\r\n      {loginError && <p className=\"text-danger\">{loginError}</p>}\r\n      <button\r\n        className=\"btn btn-primary w-100 mx-auto\"\r\n        type=\"submit\"\r\n        disabled={!isValid}\r\n      >\r\n        Submit\r\n      </button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default LoginForm\r\n","import React, { useEffect, useState } from 'react'\r\nimport { validator } from '../../utils/validator'\r\nimport TextField from '../common/form/textField'\r\nimport SelectField from '../common/form/selectField'\r\nimport RadioField from '../common/form/radioField'\r\nimport MultiSelectField from '../common/form/multiSelectField'\r\nimport CheckBoxField from '../common/form/checkBoxField'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getQualities } from '../../store/qualities'\r\nimport { getProfessions } from '../../store/professions'\r\nimport { signUp } from '../../store/users'\r\n\r\nconst RegisterForm = () => {\r\n  const dispatch = useDispatch()\r\n  const [data, setData] = useState({\r\n    email: '',\r\n    password: '',\r\n    profession: '',\r\n    sex: 'male',\r\n    name: '',\r\n    qualities: [],\r\n    licence: false\r\n  })\r\n  const qualities = useSelector(getQualities())\r\n  const qualitiesList = qualities.map((q) => ({\r\n    label: q.name,\r\n    value: q._id\r\n  }))\r\n  const professions = useSelector(getProfessions())\r\n  const professionsList = professions.map((p) => ({\r\n    label: p.name,\r\n    value: p._id\r\n  }))\r\n  const [errors, setErrors] = useState({})\r\n\r\n  const handleChange = (target) => {\r\n    setData((prevState) => ({\r\n      ...prevState,\r\n      [target.name]: target.value\r\n    }))\r\n  }\r\n  const validatorConfig = {\r\n    email: {\r\n      isRequired: {\r\n        message: 'Электронная почта обязательна для заполнения'\r\n      },\r\n      isEmail: {\r\n        message: 'Email введен некорректно'\r\n      }\r\n    },\r\n    name: {\r\n      isRequired: {\r\n        message: 'Имя обязательно для заполнения'\r\n      },\r\n      min: {\r\n        message: 'Имя должно состоять минимум из 3 символов',\r\n        value: 3\r\n      }\r\n    },\r\n    password: {\r\n      isRequired: {\r\n        message: 'Пароль обязателен для заполнения'\r\n      },\r\n      isCapitalSymbol: {\r\n        message: 'Пароль должен содержать хотя бы одну заглавную букву'\r\n      },\r\n      isContainDigit: {\r\n        message: 'Пароль должен содержать хотя бы одно число'\r\n      },\r\n      min: {\r\n        message: 'Пароль должен состоять минимум из 8 символов',\r\n        value: 8\r\n      }\r\n    },\r\n    profession: {\r\n      isRequired: {\r\n        message: 'Обязательно выберите вашу профессию'\r\n      }\r\n    },\r\n    licence: {\r\n      isRequired: {\r\n        message:\r\n          'Вы не можете использовать наш сервис без подтверждения лицензионного соглашения'\r\n      }\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    validate()\r\n  }, [data])\r\n  const validate = () => {\r\n    const errors = validator(data, validatorConfig)\r\n    setErrors(errors)\r\n    return Object.keys(errors).length === 0\r\n  }\r\n  const isValid = Object.keys(errors).length === 0\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    const isValid = validate()\r\n    if (!isValid) return\r\n    const newData = {\r\n      ...data,\r\n      qualities: data.qualities.map((q) => q.value)\r\n    }\r\n    dispatch(signUp(newData))\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <TextField\r\n        label=\"Электронная почта\"\r\n        name=\"email\"\r\n        value={data.email}\r\n        onChange={handleChange}\r\n        error={errors.email}\r\n      />\r\n      <TextField\r\n        label=\"Имя\"\r\n        name=\"name\"\r\n        value={data.name}\r\n        onChange={handleChange}\r\n        error={errors.name}\r\n      />\r\n      <TextField\r\n        label=\"Пароль\"\r\n        type=\"password\"\r\n        name=\"password\"\r\n        value={data.password}\r\n        onChange={handleChange}\r\n        error={errors.password}\r\n      />\r\n      <SelectField\r\n        label=\"Выбери свою профессию\"\r\n        defaultOption=\"Choose...\"\r\n        options={professionsList}\r\n        name=\"profession\"\r\n        onChange={handleChange}\r\n        value={data.profession}\r\n        error={errors.profession}\r\n      />\r\n      <RadioField\r\n        options={[\r\n          { name: 'Male', value: 'male' },\r\n          { name: 'Female', value: 'female' },\r\n          { name: 'Other', value: 'other' }\r\n        ]}\r\n        value={data.sex}\r\n        name=\"sex\"\r\n        onChange={handleChange}\r\n        label=\"Выберите ваш пол\"\r\n      />\r\n      <MultiSelectField\r\n        options={qualitiesList}\r\n        onChange={handleChange}\r\n        defaultValue={data.qualities}\r\n        name=\"qualities\"\r\n        label=\"Выберите ваши качества\"\r\n      />\r\n      <CheckBoxField\r\n        value={data.licence}\r\n        onChange={handleChange}\r\n        name=\"licence\"\r\n        error={errors.licence}\r\n      >\r\n        Подтвердить <a>лицензионное соглашение</a>\r\n      </CheckBoxField>\r\n      <button\r\n        className=\"btn btn-primary w-100 mx-auto\"\r\n        type=\"submit\"\r\n        disabled={!isValid}\r\n      >\r\n        Submit\r\n      </button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default RegisterForm\r\n","import React, { useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport LoginForm from '../components/ui/loginForm'\r\nimport RegisterForm from '../components/ui/registerForm'\r\n\r\nconst Login = () => {\r\n  const { type } = useParams()\r\n  const [formType, setFormType] = useState(type === 'register' ? type : 'login')\r\n  const toggleFormType = (params) => {\r\n    setFormType((prevState) =>\r\n      prevState === 'register' ? 'login' : 'register'\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 offset-md-3 shadow p-4\">\r\n          {formType === 'register' ? (\r\n            <>\r\n              <h3 className=\"mb-4\">Register</h3>\r\n              <RegisterForm />\r\n              <p>\r\n                Already have account?{' '}\r\n                <a role=\"button\" onClick={toggleFormType}>\r\n                  {' '}\r\n                  Sign In\r\n                </a>\r\n              </p>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <h3 className=\"mb-4\">Login</h3>\r\n              <LoginForm />\r\n              <p>\r\n                Dont have account?{' '}\r\n                <a role=\"button\" onClick={toggleFormType}>\r\n                  {' '}\r\n                  Sign Up\r\n                </a>\r\n              </p>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","import { useEffect, useState } from 'react'\r\nimport professions from '../mockData/professions.json'\r\nimport qualities from '../mockData/qualities.json'\r\nimport users from '../mockData/users.json'\r\nimport httpService from '../services/http.service'\r\n\r\nconst useMockData = () => {\r\n  const statusConsts = {\r\n    idle: 'Not Started',\r\n    pending: 'In Process',\r\n    successed: 'Ready',\r\n    error: 'Error occurred'\r\n  }\r\n  const [error, setError] = useState(null)\r\n  const [status, setStatus] = useState(statusConsts.idle)\r\n  const [progress, setProgress] = useState(0)\r\n  const [count, setCount] = useState(0)\r\n  const summaryCount = professions.length + qualities.length + users.length\r\n  const incrementCount = () => {\r\n    setCount((prevState) => prevState + 1)\r\n  }\r\n  const updateProgress = () => {\r\n    if (count !== 0 && status === statusConsts.idle)\r\n      setStatus(statusConsts.pending)\r\n\r\n    const newProgress = Math.floor((count / summaryCount) * 100)\r\n    if (progress < newProgress) setProgress(() => newProgress)\r\n\r\n    if (newProgress === 100) setStatus(statusConsts.successed)\r\n  }\r\n\r\n  useEffect(() => {\r\n    updateProgress()\r\n  }, [count])\r\n  async function initialize() {\r\n    try {\r\n      for (const prof of professions) {\r\n        await httpService.put('profession/' + prof._id, prof)\r\n        incrementCount()\r\n      }\r\n      for (const user of users) {\r\n        await httpService.put('user/' + user._id, user)\r\n        incrementCount()\r\n      }\r\n      for (const qual of qualities) {\r\n        await httpService.put('quality/' + qual._id, qual)\r\n        incrementCount()\r\n      }\r\n    } catch (error) {\r\n      setError(error)\r\n      setStatus(statusConsts.error)\r\n    }\r\n  }\r\n\r\n  return { error, initialize, progress, status }\r\n}\r\n\r\nexport default useMockData\r\n","import React from 'react'\r\nimport useMockData from '../utils/mockData'\r\n\r\nconst Main = () => {\r\n  const { error, initialize, progress, status } = useMockData()\r\n  const handleClick = () => {\r\n    initialize()\r\n  }\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h1> Main Page</h1>\r\n      <h3>Инициализация данных в FireBase</h3>\r\n      <ul>\r\n        <li>Status: {status}</li>\r\n        <li>Progress: {progress}%</li>\r\n        {error && <li>Error: {error}</li>}\r\n      </ul>\r\n      <button className=\"btn btn-primary\" onClick={handleClick}>\r\n        {' '}\r\n        Инициализировать\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Main\r\n","import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\nimport { getCurrentUserData } from '../../store/users'\r\n\r\nfunction NavProfile() {\r\n  const currentUser = useSelector(getCurrentUserData())\r\n  const [isOpen, setOpen] = useState(false)\r\n  const toggleMenu = () => {\r\n    setOpen((prevState) => !prevState)\r\n  }\r\n  if (!currentUser) return 'Loading...'\r\n  return (\r\n    <div className=\"dropdown\" onClick={toggleMenu}>\r\n      <div className=\"btn dropdown-toggle d-flex align-items-center\">\r\n        <div className=\"me-2\">{currentUser.name}</div>\r\n        <img\r\n          src={currentUser.image}\r\n          alt=\"\"\r\n          height=\"40\"\r\n          className=\"img-responsive rounded-circle\"\r\n        />\r\n      </div>\r\n      <div className={'w-100 dropdown-menu' + (isOpen ? ' show' : '')}>\r\n        <Link to={`/users/${currentUser._id}`} className=\"dropdown-item\">\r\n          Profile\r\n        </Link>\r\n        <Link to=\"/logout\" className=\"dropdown-item\">\r\n          Log Out\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NavProfile\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport NavProfile from './navProfile'\r\nimport { useSelector } from 'react-redux'\r\nimport { getIsLoggedIn } from '../../store/users'\r\n\r\nconst NavBar = () => {\r\n  const isLoggedIn = useSelector(getIsLoggedIn())\r\n  return (\r\n    <nav className=\"navbar bg-light mb-3\">\r\n      <div className=\"container-fluid\">\r\n        <ul className=\"nav\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link \" aria-current=\"page\" to=\"/\">\r\n              Main\r\n            </Link>\r\n          </li>\r\n          {isLoggedIn && (\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link \" aria-current=\"page\" to=\"/users\">\r\n                Users\r\n              </Link>\r\n            </li>\r\n          )}\r\n        </ul>\r\n        <div className=\"d-flex\">\r\n          {isLoggedIn ? (\r\n            <NavProfile />\r\n          ) : (\r\n            <Link className=\"nav-link \" aria-current=\"page\" to=\"/login\">\r\n              Login\r\n            </Link>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default NavBar\r\n","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport { useSelector } from 'react-redux'\r\nimport { getIsLoggedIn } from '../../store/users'\r\nfunction ProtectedRoute({ component: Component, children, ...rest }) {\r\n  const isLoggedIn = useSelector(getIsLoggedIn())\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        if (!isLoggedIn) {\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: '/login',\r\n                state: {\r\n                  from: props.location\r\n                }\r\n              }}\r\n            />\r\n          )\r\n        }\r\n        return Component ? <Component {...props} /> : children\r\n      }}\r\n    />\r\n  )\r\n}\r\nProtectedRoute.propTypes = {\r\n  component: PropTypes.func,\r\n  location: PropTypes.object,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node\r\n  ])\r\n}\r\n\r\nexport default ProtectedRoute\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { logOut } from '../store/users'\r\n\r\nconst LogOut = () => {\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    dispatch(logOut())\r\n  }, [])\r\n  return <h1>Loading</h1>\r\n}\r\n\r\nexport default LogOut\r\n","import { useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  getIsLoggedIn,\r\n  getUsersLoadingStatus,\r\n  loadUsersList\r\n} from '../../../store/users'\r\nimport { loadQualitiesList } from '../../../store/qualities'\r\nimport { loadProfessionsList } from '../../../store/professions'\r\n\r\nconst AppLoader = ({ children }) => {\r\n  const dispatch = useDispatch()\r\n  const isLoggedIn = useSelector(getIsLoggedIn())\r\n  const usersStatusLoading = useSelector(getUsersLoadingStatus())\r\n  useEffect(() => {\r\n    dispatch(loadQualitiesList())\r\n    dispatch(loadProfessionsList())\r\n    if (isLoggedIn) dispatch(loadUsersList())\r\n  }, [isLoggedIn])\r\n  if (usersStatusLoading) return 'Loading...'\r\n  return children\r\n}\r\n\r\nAppLoader.propTypes = {\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node\r\n  ])\r\n}\r\n\r\nexport default AppLoader\r\n","import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\nimport { ToastContainer } from 'react-toastify'\r\nimport Users from './layouts/users'\r\nimport Login from './layouts/login'\r\nimport Main from './layouts/main'\r\nimport NavBar from './components/ui/navBar'\r\nimport ProtectedRoute from './components/common/protectedRoute'\r\nimport LogOut from './layouts/logOut'\r\nimport AppLoader from './components/ui/hoc/appLoader'\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <AppLoader>\r\n        <NavBar />\r\n        <Switch>\r\n          <ProtectedRoute path=\"/users/:userId?/:edit?\" component={Users} />\r\n          <Route path=\"/login/:type?\" component={Login} />\r\n          <Route path=\"/logout\" component={LogOut} />\r\n          <Route path=\"/fast-company\" exact component={Main} />\r\n          <Redirect to=\"/fast-company\" />\r\n        </Switch>\r\n      </AppLoader>\r\n      <ToastContainer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { combineReducers, configureStore } from '@reduxjs/toolkit'\r\nimport qualitiesReducer from './qualities'\r\nimport professionsReducer from './professions'\r\nimport usersReducer from './users'\r\nimport commentsReducer from './comments'\r\n\r\nconst rootReducer = combineReducers({\r\n  qualities: qualitiesReducer,\r\n  professions: professionsReducer,\r\n  users: usersReducer,\r\n  comments: commentsReducer\r\n})\r\n\r\nexport function createStore() {\r\n  return configureStore({\r\n    reducer: rootReducer\r\n  })\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport reportWebVitals from './reportWebVitals'\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport App from './app/app'\r\nimport { Router } from 'react-router-dom'\r\nimport { createStore } from './app/store/createStore'\r\nimport { Provider } from 'react-redux'\r\nimport history from './app/utils/history'\r\n\r\nconst store = createStore()\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <Router history={history}>\r\n        <App />\r\n      </Router>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n"],"sourceRoot":""}